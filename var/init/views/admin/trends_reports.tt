[% page_title = "Trends Reports" %]
[% INCLUDE admin/header_include.tt %]

<div id="app">

        <div class="row">
            <div class="col-md">
                <b-form-select v-model="filters.report_id" @change="fetch_report_data()">
                    <option v-for="report in reports.objects" :value="report.properties.id">{{report.properties.name}}</option>
                </b-form-select>
            </div>
            <div class="col-md">
                <b-form-select v-model="filters.granularity" @change="update_granularity()" :options="granularity_options"></b-form-select>
            </div>
            <div class="col-md">
                <input type="number" class="form-control" v-model="filters.range" @change="fetch_report_data()">
            </div>
            <div class="col-md">
                <b-form-datepicker v-model="filters.start"></b-form-datepicker>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <tr>
                    <th v-for="head in report.headings">{{head}}</th>
                </tr>
                <tr v-for="row in report.rows">
                    <template v-for="(col,index) in row">
                        <th v-if="index == 0">{{col}}</th>
                        <td v-else>{{col}}</td>
                    </template>
                </tr>
            </table>
        </div>

        <div>
            <a href="/admin/trends/reports/manage" class="btn btn-primary"><i class="fas fa-tasks"></i> Manage Reports</a>
            <button class="btn btn-primary" @click="export_to_csv()"><i class="fas fa-file-csv"></i> Export to CSV</button>
        </div>
</div>

[% foot_tags = BLOCK %]
<script src="https://cdn.jsdelivr.net/npm/papaparse@5.3.0/papaparse.min.js" integrity="sha256-Xjq9HM9n3XzT47n/NmSEaJUwPi7hme++D8mxHfSr+0Q=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/file-saver@2.0.2/dist/FileSaver.min.js" integrity="sha256-u/J1Urdrk3nCYFefpoeTMgI5viU1ujCDu2fXXoSJjhg=" crossorigin="anonymous"></script>
<script type="text/javascript">
'use strict';

new Vue({
    el:     '#app',
    data:   {
        range_defaults : {
            hourly : 24,
            daily : 15,
            monthly : 12,
            yearly : 5
        },
        granularity_options : [
            {
                value: "hourly", text : "Hourly",
            },
            {
                value: "daily", text : "Daily",
            },
            {
                value: "monthly", text : "Monthly",
            },
            {
                value: "yearly", text : "Yearly",
            },
        ],
        filters : { granularity: 'monthly', range : 12, start: (new Date()).toISOString().split('T')[0] },
        reports : wing.object_list({
            list_api : '/api/trendsreport',
            params : {_items_per_page : 100, _order_by : 'name'},
        }),
        report : [],
    },
    mounted() {
        var self = this;
        self.reports.all({on_all_done : function() {
            if (self.reports.objects.length > 0) {
                self.filters.report_id = self.reports.objects[0].properties.id;
                self.fetch_report_data();
            }
        }});
    },
    methods : {
        fetch_report_data : _.debounce(function() { // some browsers fire events before updating the model, this gets around that
            const self = this;
            axios.get('/api/trends/'+self.filters.granularity+'/'+self.filters.report_id, { params: { start : self.filters.start, range : self.filters.range }})
            .then(function(response) {
                self.report = response.data.result;
            });
        },200),
        update_granularity() {
            this.filters.range = this.range_defaults[this.filters.granularity];
            this.fetch_report_data();
        },
        export_to_csv() {
            var self = this;
            var headers = self.report.headings;
            var csv = Papa.unparse([headers]);
            csv += '\r\n' + Papa.unparse(self.report.rows);
            var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            saveAs(blob, self.report.name+'.csv');
        },
    },
});
</script>
[% END %]
[% INCLUDE admin/footer_include.tt %]
