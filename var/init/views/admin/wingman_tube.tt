[% page_title = "Tube ${tube_name}" %]
[% INCLUDE admin/header_include.tt %]
<div id="app">

    <h2>Jobs</h2>
    <div class="table-responsive">
        <table class="table table-striped table-hover">
        	<tr>
        		<th>Id</th>
        		<th>State</th>
        		<th>Priority</th>
        		<th>Age</th>
        		<th>Time Left</th>
        		<th># Reserves</th>
        		<th># Timeouts</th>
        		<th># Releases</th>
        		<th># Buries</th>
        		<th># Kicks</th>
        	</tr>
        	<tr v-for="job in jobs">
        		<td><a :href="'/admin/wingman/jobs/'+job.id">{{job.id}}</a></td>
        		<td>{{job.state}}</td>
        		<td>{{job.pri}}</td>
        		<td>{{job.age}}</td>
        		<td>{{job.time_left}}</td>
        		<td>{{job.reserves}}</td>
        		<td>{{job.timeouts}}</td>
        		<td>{{job.releases}}</td>
        		<td>{{job.buries}}</td>
        		<td>{{job.kicks}}</td>
        	</tr>
        </table>
    </div>
    <p>
        <button class="btn btn-primary" @click="peek('ready');">Peek Ready</button>
        <button class="btn btn-primary" @click="peek('delayed');">Peek Delayed</button>
        <button class="btn btn-primary" @click="peek('buried');">Peek Buried</button>
    </p>

    <h2>Actions</h2>
    <div class="row">
    	<div class="col-sm">

    			<h3>Pause Tube</h3>
				<div class="form-group">
					<label for="pause_seconds">Pause Time</label>
                    <div class="input-group">
		               <input class="form-control" type="number" pattern="\d+" v-model="pause_seconds" name="pause_seconds">
                       <div class="input-group-append"><span class="input-group-text">seconds</span></div>
                    </div>
				</div>
				<div class="form-group">
					<button class="btn btn-danger" @click="pause_tube()">Pause</button>
				</div>

    	</div>
    	<div class="col-sm">

    			<h3>Add Job</h3>
				<div class="form-group">
					<label for="phase">Phase</label>
					<input class="form-control" type="text" pattern="\s+" v-model="new_job.phase" name="phase">
				</div>
				<div class="form-group">
					<label for="arguments">Arguments</label>
					<textarea v-model="new_job.arguments" name="arguments" rows="5" class="form-control"></textarea>
                    <small class="text-muted form-text">Must be a JSON object.</small>
				</div>
				<div class="form-group">
					<label for="priority">Priority</label>
					<input class="form-control" type="number" pattern="\d+" v-model="new_job.priority" name="priority">
                    <small class="text-muted form-text">Between 1 and 9999. Smaller is faster.</small>
				</div>
				<div class="form-group">
					<label for="delay">Delay</label>
                    <div class="input-group">
    					<input class="form-control" type="number" pattern="\d+" v-model="new_job.delay" name="delay">
                        <div class="input-group-append"><span class="input-group-text">seconds</span></div>
                    </div>
				</div>
				<div class="form-group">
					<label for="ttr">Time To Run</label>
                    <div class="input-group">
    					<input class="form-control" type="number" pattern="\d+" v-model="new_job.ttr" name="ttr">
                        <div class="input-group-append"><span class="input-group-text">seconds</span></div>
                    </div>
				</div>
				<div class="form-group">
					<button class="btn btn-primary" @click="add_job()">Add Job</button>
				</div>

    	</div>
    </div>

    <h2>All Stats</h2>
    <div class="table-responsive">
        <table class="table table-striped table-hover">
        	[% FOREACH pair IN stats.pairs %]
        	<tr>
        		<th>[% pair.key %]</th>
        		<th>[% pair.value %]</th>
        	</tr>
        	[% END %]
        </table>
    </div>
</div>

[% foot_tags = BLOCK %]

<script type="text/javascript">
'use strict';


new Vue({
    el:     '#app',
    data:   {
        jobs : [],
        pause_seconds : 60,
        new_job : {
    		ttr : [% config.ttr || 60 %],
    		delay : [% config.delay || 0 %],
    		priority : [% config.priority || 2000 %],
    		arguments : `{
    "template" : "generic",
    "params" : {
        "subject" : "Howdy",
        "message" : "This is a test."
    }
}`,
    		phase : 'EmailAllAdmins',
    		tube : "[% tube_name %]",
    	},
    },
    mounted() {
        var self = this;
        axios.get('/api/wingman/tubes/[% tube_name %]/jobs')
        .then(function(response) {
            self.jobs = response.data.result.items;
        });
    },
    methods : {
        peek : _.debounce(function(type) { // some browsers fire events before updating the model, this gets around that
            const self = this;
            axios.get('/api/wingman/tubes/[% tube_name %]/jobs/' + type)
            .then(function(response) {
                window.location = '/admin/wingman/jobs/' + response.data.result.id;
            });
        },200),
        pause_tube : function() {
            const self = this;
            axios.post('/api/wingman/tubes/[% tube_name %]/pause', { seconds : self.pause_seconds })
            .then(function(response) {
                wing.success('Tube paused.');
            });
        },
        add_job : function() {
            const self = this;
            axios.post('/api/wingman/jobs', self.new_job)
            .then(function(response) {
                self.jobs.push(response.data.result);
                wing.success('Job added.');
            });
        },
    },
});
</script>
[% END %]
[% INCLUDE admin/footer_include.tt %]
