package [% project %]::Rest::[% class_name %];

use Wing::Perl;
use Wing;
use Dancer;
use Ouch;
use Wing::Rest;[% USE String %][% lower_class = String.new(class_name).lower %]

get '/api/[% lower_class %]' => sub {
    ##remove the eval for data accessible only by registered users
    my $user = eval { get_user_by_session_id() };
    my $where = {'-and' => []};
    my $options = { order_by => { -desc => 'me.name' } };
    my $query = param('query');
    if (defined $query && $query) {
        push @{$where->{'-and'}}, \['match(me.name) against(? in boolean mode)', $query.'*'];
        $options->{'+select'} = [\['match(me.name) against(?) as fulltextscore', $query]];
        $options->{'+as'} = [qw(fulltextscore)];
        $options->{order_by} = { -desc => 'fulltextscore'};
    }
    ### add in other fields to search on
    # my $is_cool = param('is_cool');
    # unless (defined $is_cool and $is_cool ne '') {
    #     push @{$where->{'-and'}}, 'me.is_cool' => $is_cool;
    # }
    my $[% lower_class %]s = site_db()->resultset('[% class_name %]')->search($where, $options);
    return format_list($[% lower_class %]s, current_user => $user); 
};

generate_crud('[% class_name %]');
generate_all_relationships('[% class_name %]');

1;
